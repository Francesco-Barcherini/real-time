
profile:     formato del file elf64-x86-64


Disassemblamento della sezione .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)  
 319:	6c                   	insb   (%dx),%es:(%rdi)
 31a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 321:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 326:	78 2d                	js     355 <__abi_tag-0x37>
 328:	78 38                	js     362 <__abi_tag-0x2a>
 32a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 330:	6f                   	outsl  %ds:(%rsi),(%dx)
 331:	2e 32 00             	cs xor (%rax),%al

Disassemblamento della sezione .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    $0x0,%al
 33a:	00 00                	add    %al,(%rax)
 33c:	20 00                	and    %al,(%rax)
 33e:	00 00                	add    %al,(%rax)
 340:	05 00 00 00 47       	add    $0x47000000,%eax
 345:	4e 55                	rex.WRX push %rbp
 347:	00 02                	add    %al,(%rdx)
 349:	00 00                	add    %al,(%rax)
 34b:	c0 04 00 00          	rolb   $0x0,(%rax,%rax,1)
 34f:	00 03                	add    %al,(%rbx)
 351:	00 00                	add    %al,(%rax)
 353:	00 00                	add    %al,(%rax)
 355:	00 00                	add    %al,(%rax)
 357:	00 02                	add    %al,(%rdx)
 359:	80 00 c0             	addb   $0xc0,(%rax)
 35c:	04 00                	add    $0x0,%al
 35e:	00 00                	add    %al,(%rax)
 360:	01 00                	add    %eax,(%rax)
 362:	00 00                	add    %al,(%rax)
 364:	00 00                	add    %al,(%rax)
	...

Disassemblamento della sezione .note.gnu.build-id:

0000000000000368 <.note.gnu.build-id>:
 368:	04 00                	add    $0x0,%al
 36a:	00 00                	add    %al,(%rax)
 36c:	14 00                	adc    $0x0,%al
 36e:	00 00                	add    %al,(%rax)
 370:	03 00                	add    (%rax),%eax
 372:	00 00                	add    %al,(%rax)
 374:	47                   	rex.RXB
 375:	4e 55                	rex.WRX push %rbp
 377:	00 bd 0e 3a 5f 6c    	add    %bh,0x6c5f3a0e(%rbp)
 37d:	d4                   	(bad)  
 37e:	54                   	push   %rsp
 37f:	5a                   	pop    %rdx
 380:	3b 21                	cmp    (%rcx),%esp
 382:	b2 0a                	mov    $0xa,%dl
 384:	fe                   	(bad)  
 385:	ec                   	in     (%dx),%al
 386:	91                   	xchg   %eax,%ecx
 387:	09 7f a5             	or     %edi,-0x5b(%rdi)
 38a:	16                   	(bad)  
 38b:	b9                   	.byte 0xb9

Disassemblamento della sezione .note.ABI-tag:

000000000000038c <__abi_tag>:
 38c:	04 00                	add    $0x0,%al
 38e:	00 00                	add    %al,(%rax)
 390:	10 00                	adc    %al,(%rax)
 392:	00 00                	add    %al,(%rax)
 394:	01 00                	add    %eax,(%rax)
 396:	00 00                	add    %al,(%rax)
 398:	47                   	rex.RXB
 399:	4e 55                	rex.WRX push %rbp
 39b:	00 00                	add    %al,(%rax)
 39d:	00 00                	add    %al,(%rax)
 39f:	00 03                	add    %al,(%rbx)
 3a1:	00 00                	add    %al,(%rax)
 3a3:	00 02                	add    %al,(%rdx)
 3a5:	00 00                	add    %al,(%rax)
 3a7:	00 00                	add    %al,(%rax)
 3a9:	00 00                	add    %al,(%rax)
	...

Disassemblamento della sezione .gnu.hash:

00000000000003b0 <.gnu.hash>:
 3b0:	02 00                	add    (%rax),%al
 3b2:	00 00                	add    %al,(%rax)
 3b4:	09 00                	or     %eax,(%rax)
 3b6:	00 00                	add    %al,(%rax)
 3b8:	01 00                	add    %eax,(%rax)
 3ba:	00 00                	add    %al,(%rax)
 3bc:	06                   	(bad)  
 3bd:	00 00                	add    %al,(%rax)
 3bf:	00 00                	add    %al,(%rax)
 3c1:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 3c7:	00 09                	add    %cl,(%rcx)
 3c9:	00 00                	add    %al,(%rax)
 3cb:	00 00                	add    %al,(%rax)
 3cd:	00 00                	add    %al,(%rax)
 3cf:	00 d1                	add    %dl,%cl
 3d1:	65 ce                	gs (bad) 
 3d3:	6d                   	insl   (%dx),%es:(%rdi)

Disassemblamento della sezione .dynsym:

00000000000003d8 <.dynsym>:
	...
 3f0:	20 00                	and    %al,(%rax)
 3f2:	00 00                	add    %al,(%rax)
 3f4:	12 00                	adc    (%rax),%al
	...
 406:	00 00                	add    %al,(%rax)
 408:	8e 00                	mov    (%rax),%es
 40a:	00 00                	add    %al,(%rax)
 40c:	20 00                	and    %al,(%rax)
	...
 41e:	00 00                	add    %al,(%rax)
 420:	4a 00 00             	rex.WX add %al,(%rax)
 423:	00 12                	add    %dl,(%rdx)
	...
 435:	00 00                	add    %al,(%rax)
 437:	00 32                	add    %dh,(%rdx)
 439:	00 00                	add    %al,(%rax)
 43b:	00 12                	add    %dl,(%rdx)
	...
 44d:	00 00                	add    %al,(%rax)
 44f:	00 43 00             	add    %al,0x0(%rbx)
 452:	00 00                	add    %al,(%rax)
 454:	12 00                	adc    (%rax),%al
	...
 466:	00 00                	add    %al,(%rax)
 468:	aa                   	stos   %al,%es:(%rdi)
 469:	00 00                	add    %al,(%rax)
 46b:	00 20                	add    %ah,(%rax)
	...
 47d:	00 00                	add    %al,(%rax)
 47f:	00 10                	add    %dl,(%rax)
 481:	00 00                	add    %al,(%rax)
 483:	00 12                	add    %dl,(%rdx)
	...
 495:	00 00                	add    %al,(%rax)
 497:	00 b9 00 00 00 20    	add    %bh,0x20000000(%rcx)
	...
 4ad:	00 00                	add    %al,(%rax)
 4af:	00 01                	add    %al,(%rcx)
 4b1:	00 00                	add    %al,(%rax)
 4b3:	00 22                	add    %ah,(%rdx)
	...

Disassemblamento della sezione .dynstr:

00000000000004c8 <.dynstr>:
 4c8:	00 5f 5f             	add    %bl,0x5f(%rdi)
 4cb:	63 78 61             	movsxd 0x61(%rax),%edi
 4ce:	5f                   	pop    %rdi
 4cf:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 4d5:	7a 65                	jp     53c <__abi_tag+0x1b0>
 4d7:	00 63 6c             	add    %ah,0x6c(%rbx)
 4da:	6f                   	outsl  %ds:(%rsi),(%dx)
 4db:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
 4de:	6e                   	outsb  %ds:(%rsi),(%dx)
 4df:	61                   	(bad)  
 4e0:	6e                   	outsb  %ds:(%rsi),(%dx)
 4e1:	6f                   	outsl  %ds:(%rsi),(%dx)
 4e2:	73 6c                	jae    550 <__abi_tag+0x1c4>
 4e4:	65 65 70 00          	gs gs jo 4e8 <__abi_tag+0x15c>
 4e8:	5f                   	pop    %rdi
 4e9:	5f                   	pop    %rdi
 4ea:	6c                   	insb   (%dx),%es:(%rdi)
 4eb:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 4f2:	72 74                	jb     568 <__abi_tag+0x1dc>
 4f4:	5f                   	pop    %rdi
 4f5:	6d                   	insl   (%dx),%es:(%rdi)
 4f6:	61                   	(bad)  
 4f7:	69 6e 00 5f 5f 73 74 	imul   $0x74735f5f,0x0(%rsi),%ebp
 4fe:	61                   	(bad)  
 4ff:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
 502:	63 68 6b             	movsxd 0x6b(%rax),%ebp
 505:	5f                   	pop    %rdi
 506:	66 61                	data16 (bad) 
 508:	69 6c 00 70 72 69 6e 	imul   $0x746e6972,0x70(%rax,%rax,1),%ebp
 50f:	74 
 510:	66 00 63 6c          	data16 add %ah,0x6c(%rbx)
 514:	6f                   	outsl  %ds:(%rsi),(%dx)
 515:	63 6b 5f             	movsxd 0x5f(%rbx),%ebp
 518:	67 65 74 74          	addr32 gs je 590 <__abi_tag+0x204>
 51c:	69 6d 65 00 6c 69 62 	imul   $0x62696c00,0x65(%rbp),%ebp
 523:	63 2e                	movsxd (%rsi),%ebp
 525:	73 6f                	jae    596 <__abi_tag+0x20a>
 527:	2e 36 00 47 4c       	cs ss add %al,0x4c(%rdi)
 52c:	49                   	rex.WB
 52d:	42                   	rex.X
 52e:	43 5f                	rex.XB pop %r15
 530:	32 2e                	xor    (%rsi),%ch
 532:	32 2e                	xor    (%rsi),%ch
 534:	35 00 47 4c 49       	xor    $0x494c4700,%eax
 539:	42                   	rex.X
 53a:	43 5f                	rex.XB pop %r15
 53c:	32 2e                	xor    (%rsi),%ch
 53e:	34 00                	xor    $0x0,%al
 540:	47                   	rex.RXB
 541:	4c                   	rex.WR
 542:	49                   	rex.WB
 543:	42                   	rex.X
 544:	43 5f                	rex.XB pop %r15
 546:	32 2e                	xor    (%rsi),%ch
 548:	31 37                	xor    %esi,(%rdi)
 54a:	00 47 4c             	add    %al,0x4c(%rdi)
 54d:	49                   	rex.WB
 54e:	42                   	rex.X
 54f:	43 5f                	rex.XB pop %r15
 551:	32 2e                	xor    (%rsi),%ch
 553:	33 34 00             	xor    (%rax,%rax,1),%esi
 556:	5f                   	pop    %rdi
 557:	49 54                	rex.WB push %r12
 559:	4d 5f                	rex.WRB pop %r15
 55b:	64 65 72 65          	fs gs jb 5c4 <__abi_tag+0x238>
 55f:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 566:	4d 
 567:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 569:	6f                   	outsl  %ds:(%rsi),(%dx)
 56a:	6e                   	outsb  %ds:(%rsi),(%dx)
 56b:	65 54                	gs push %rsp
 56d:	61                   	(bad)  
 56e:	62                   	(bad)  
 56f:	6c                   	insb   (%dx),%es:(%rdi)
 570:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 574:	67 6d                	insl   (%dx),%es:(%edi)
 576:	6f                   	outsl  %ds:(%rsi),(%dx)
 577:	6e                   	outsb  %ds:(%rsi),(%dx)
 578:	5f                   	pop    %rdi
 579:	73 74                	jae    5ef <__abi_tag+0x263>
 57b:	61                   	(bad)  
 57c:	72 74                	jb     5f2 <__abi_tag+0x266>
 57e:	5f                   	pop    %rdi
 57f:	5f                   	pop    %rdi
 580:	00 5f 49             	add    %bl,0x49(%rdi)
 583:	54                   	push   %rsp
 584:	4d 5f                	rex.WRB pop %r15
 586:	72 65                	jb     5ed <__abi_tag+0x261>
 588:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 58f:	4d 
 590:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 592:	6f                   	outsl  %ds:(%rsi),(%dx)
 593:	6e                   	outsb  %ds:(%rsi),(%dx)
 594:	65 54                	gs push %rsp
 596:	61                   	(bad)  
 597:	62                   	.byte 0x62
 598:	6c                   	insb   (%dx),%es:(%rdi)
 599:	65                   	gs
	...

Disassemblamento della sezione .gnu.version:

000000000000059c <.gnu.version>:
 59c:	00 00                	add    %al,(%rax)
 59e:	02 00                	add    (%rax),%al
 5a0:	01 00                	add    %eax,(%rax)
 5a2:	03 00                	add    (%rax),%eax
 5a4:	04 00                	add    $0x0,%al
 5a6:	05 00 01 00 03       	add    $0x3000100,%eax
 5ab:	00 01                	add    %al,(%rcx)
 5ad:	00                   	.byte 0x0
 5ae:	05                   	.byte 0x5
	...

Disassemblamento della sezione .gnu.version_r:

00000000000005b0 <.gnu.version_r>:
 5b0:	01 00                	add    %eax,(%rax)
 5b2:	04 00                	add    $0x0,%al
 5b4:	58                   	pop    %rax
 5b5:	00 00                	add    %al,(%rax)
 5b7:	00 10                	add    %dl,(%rax)
 5b9:	00 00                	add    %al,(%rax)
 5bb:	00 00                	add    %al,(%rax)
 5bd:	00 00                	add    %al,(%rax)
 5bf:	00 75 1a             	add    %dh,0x1a(%rbp)
 5c2:	69 09 00 00 05 00    	imul   $0x50000,(%rcx),%ecx
 5c8:	62                   	(bad)  
 5c9:	00 00                	add    %al,(%rax)
 5cb:	00 10                	add    %dl,(%rax)
 5cd:	00 00                	add    %al,(%rax)
 5cf:	00 14 69             	add    %dl,(%rcx,%rbp,2)
 5d2:	69 0d 00 00 04 00 6e 	imul   $0x6e,0x40000(%rip),%ecx        # 405dc <_end+0x3c5c4>
 5d9:	00 00 00 
 5dc:	10 00                	adc    %al,(%rax)
 5de:	00 00                	add    %al,(%rax)
 5e0:	97                   	xchg   %eax,%edi
 5e1:	91                   	xchg   %eax,%ecx
 5e2:	96                   	xchg   %eax,%esi
 5e3:	06                   	(bad)  
 5e4:	00 00                	add    %al,(%rax)
 5e6:	03 00                	add    (%rax),%eax
 5e8:	78 00                	js     5ea <__abi_tag+0x25e>
 5ea:	00 00                	add    %al,(%rax)
 5ec:	10 00                	adc    %al,(%rax)
 5ee:	00 00                	add    %al,(%rax)
 5f0:	b4 91                	mov    $0x91,%ah
 5f2:	96                   	xchg   %eax,%esi
 5f3:	06                   	(bad)  
 5f4:	00 00                	add    %al,(%rax)
 5f6:	02 00                	add    (%rax),%al
 5f8:	83 00 00             	addl   $0x0,(%rax)
 5fb:	00 00                	add    %al,(%rax)
 5fd:	00 00                	add    %al,(%rax)
	...

Disassemblamento della sezione .rela.dyn:

0000000000000600 <.rela.dyn>:
 600:	a0 3d 00 00 00 00 00 	movabs 0x80000000000003d,%al
 607:	00 08 
 609:	00 00                	add    %al,(%rax)
 60b:	00 00                	add    %al,(%rax)
 60d:	00 00                	add    %al,(%rax)
 60f:	00 a0 11 00 00 00    	add    %ah,0x11(%rax)
 615:	00 00                	add    %al,(%rax)
 617:	00 a8 3d 00 00 00    	add    %ch,0x3d(%rax)
 61d:	00 00                	add    %al,(%rax)
 61f:	00 08                	add    %cl,(%rax)
 621:	00 00                	add    %al,(%rax)
 623:	00 00                	add    %al,(%rax)
 625:	00 00                	add    %al,(%rax)
 627:	00 60 11             	add    %ah,0x11(%rax)
 62a:	00 00                	add    %al,(%rax)
 62c:	00 00                	add    %al,(%rax)
 62e:	00 00                	add    %al,(%rax)
 630:	08 40 00             	or     %al,0x0(%rax)
 633:	00 00                	add    %al,(%rax)
 635:	00 00                	add    %al,(%rax)
 637:	00 08                	add    %cl,(%rax)
 639:	00 00                	add    %al,(%rax)
 63b:	00 00                	add    %al,(%rax)
 63d:	00 00                	add    %al,(%rax)
 63f:	00 08                	add    %cl,(%rax)
 641:	40 00 00             	rex add %al,(%rax)
 644:	00 00                	add    %al,(%rax)
 646:	00 00                	add    %al,(%rax)
 648:	d8 3f                	fdivrs (%rdi)
 64a:	00 00                	add    %al,(%rax)
 64c:	00 00                	add    %al,(%rax)
 64e:	00 00                	add    %al,(%rax)
 650:	06                   	(bad)  
 651:	00 00                	add    %al,(%rax)
 653:	00 01                	add    %al,(%rcx)
	...
 65d:	00 00                	add    %al,(%rax)
 65f:	00 e0                	add    %ah,%al
 661:	3f                   	(bad)  
 662:	00 00                	add    %al,(%rax)
 664:	00 00                	add    %al,(%rax)
 666:	00 00                	add    %al,(%rax)
 668:	06                   	(bad)  
 669:	00 00                	add    %al,(%rax)
 66b:	00 02                	add    %al,(%rdx)
	...
 675:	00 00                	add    %al,(%rax)
 677:	00 e8                	add    %ch,%al
 679:	3f                   	(bad)  
 67a:	00 00                	add    %al,(%rax)
 67c:	00 00                	add    %al,(%rax)
 67e:	00 00                	add    %al,(%rax)
 680:	06                   	(bad)  
 681:	00 00                	add    %al,(%rax)
 683:	00 06                	add    %al,(%rsi)
	...
 68d:	00 00                	add    %al,(%rax)
 68f:	00 f0                	add    %dh,%al
 691:	3f                   	(bad)  
 692:	00 00                	add    %al,(%rax)
 694:	00 00                	add    %al,(%rax)
 696:	00 00                	add    %al,(%rax)
 698:	06                   	(bad)  
 699:	00 00                	add    %al,(%rax)
 69b:	00 08                	add    %cl,(%rax)
	...
 6a5:	00 00                	add    %al,(%rax)
 6a7:	00 f8                	add    %bh,%al
 6a9:	3f                   	(bad)  
 6aa:	00 00                	add    %al,(%rax)
 6ac:	00 00                	add    %al,(%rax)
 6ae:	00 00                	add    %al,(%rax)
 6b0:	06                   	(bad)  
 6b1:	00 00                	add    %al,(%rax)
 6b3:	00 09                	add    %cl,(%rcx)
	...

Disassemblamento della sezione .rela.plt:

00000000000006c0 <.rela.plt>:
 6c0:	b8 3f 00 00 00       	mov    $0x3f,%eax
 6c5:	00 00                	add    %al,(%rax)
 6c7:	00 07                	add    %al,(%rdi)
 6c9:	00 00                	add    %al,(%rax)
 6cb:	00 03                	add    %al,(%rbx)
	...
 6d5:	00 00                	add    %al,(%rax)
 6d7:	00 c0                	add    %al,%al
 6d9:	3f                   	(bad)  
 6da:	00 00                	add    %al,(%rax)
 6dc:	00 00                	add    %al,(%rax)
 6de:	00 00                	add    %al,(%rax)
 6e0:	07                   	(bad)  
 6e1:	00 00                	add    %al,(%rax)
 6e3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 6ee:	00 00                	add    %al,(%rax)
 6f0:	c8 3f 00 00          	enter  $0x3f,$0x0
 6f4:	00 00                	add    %al,(%rax)
 6f6:	00 00                	add    %al,(%rax)
 6f8:	07                   	(bad)  
 6f9:	00 00                	add    %al,(%rax)
 6fb:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 701 <__abi_tag+0x375>
 701:	00 00                	add    %al,(%rax)
 703:	00 00                	add    %al,(%rax)
 705:	00 00                	add    %al,(%rax)
 707:	00 d0                	add    %dl,%al
 709:	3f                   	(bad)  
 70a:	00 00                	add    %al,(%rax)
 70c:	00 00                	add    %al,(%rax)
 70e:	00 00                	add    %al,(%rax)
 710:	07                   	(bad)  
 711:	00 00                	add    %al,(%rax)
 713:	00 07                	add    %al,(%rdi)
	...

Disassemblamento della sezione .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassemblamento della sezione .plt:

0000000000001020 <.plt>:
    1020:	ff 35 82 2f 00 00    	push   0x2f82(%rip)        # 3fa8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 83 2f 00 00 	bnd jmp *0x2f83(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop

Disassemblamento della sezione .plt.got:

0000000000001070 <__cxa_finalize@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 7d 2f 00 00 	bnd jmp *0x2f7d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassemblamento della sezione .plt.sec:

0000000000001080 <clock_gettime@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 2d 2f 00 00 	bnd jmp *0x2f2d(%rip)        # 3fb8 <clock_gettime@GLIBC_2.17>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001090 <__stack_chk_fail@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 25 2f 00 00 	bnd jmp *0x2f25(%rip)        # 3fc0 <__stack_chk_fail@GLIBC_2.4>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010a0 <printf@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 1d 2f 00 00 	bnd jmp *0x2f1d(%rip)        # 3fc8 <printf@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <clock_nanosleep@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 15 2f 00 00 	bnd jmp *0x2f15(%rip)        # 3fd0 <clock_nanosleep@GLIBC_2.17>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassemblamento della sezione .text:

00000000000010c0 <_start>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	31 ed                	xor    %ebp,%ebp
    10c6:	49 89 d1             	mov    %rdx,%r9
    10c9:	5e                   	pop    %rsi
    10ca:	48 89 e2             	mov    %rsp,%rdx
    10cd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10d1:	50                   	push   %rax
    10d2:	54                   	push   %rsp
    10d3:	45 31 c0             	xor    %r8d,%r8d
    10d6:	31 c9                	xor    %ecx,%ecx
    10d8:	48 8d 3d ca 00 00 00 	lea    0xca(%rip),%rdi        # 11a9 <main>
    10df:	ff 15 f3 2e 00 00    	call   *0x2ef3(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    10e5:	f4                   	hlt    
    10e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    10ed:	00 00 00 

00000000000010f0 <deregister_tm_clones>:
    10f0:	48 8d 3d 19 2f 00 00 	lea    0x2f19(%rip),%rdi        # 4010 <__TMC_END__>
    10f7:	48 8d 05 12 2f 00 00 	lea    0x2f12(%rip),%rax        # 4010 <__TMC_END__>
    10fe:	48 39 f8             	cmp    %rdi,%rax
    1101:	74 15                	je     1118 <deregister_tm_clones+0x28>
    1103:	48 8b 05 d6 2e 00 00 	mov    0x2ed6(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    110a:	48 85 c0             	test   %rax,%rax
    110d:	74 09                	je     1118 <deregister_tm_clones+0x28>
    110f:	ff e0                	jmp    *%rax
    1111:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1118:	c3                   	ret    
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <register_tm_clones>:
    1120:	48 8d 3d e9 2e 00 00 	lea    0x2ee9(%rip),%rdi        # 4010 <__TMC_END__>
    1127:	48 8d 35 e2 2e 00 00 	lea    0x2ee2(%rip),%rsi        # 4010 <__TMC_END__>
    112e:	48 29 fe             	sub    %rdi,%rsi
    1131:	48 89 f0             	mov    %rsi,%rax
    1134:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1138:	48 c1 f8 03          	sar    $0x3,%rax
    113c:	48 01 c6             	add    %rax,%rsi
    113f:	48 d1 fe             	sar    %rsi
    1142:	74 14                	je     1158 <register_tm_clones+0x38>
    1144:	48 8b 05 a5 2e 00 00 	mov    0x2ea5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    114b:	48 85 c0             	test   %rax,%rax
    114e:	74 08                	je     1158 <register_tm_clones+0x38>
    1150:	ff e0                	jmp    *%rax
    1152:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1158:	c3                   	ret    
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <__do_global_dtors_aux>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	80 3d a5 2e 00 00 00 	cmpb   $0x0,0x2ea5(%rip)        # 4010 <__TMC_END__>
    116b:	75 2b                	jne    1198 <__do_global_dtors_aux+0x38>
    116d:	55                   	push   %rbp
    116e:	48 83 3d 82 2e 00 00 	cmpq   $0x0,0x2e82(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1175:	00 
    1176:	48 89 e5             	mov    %rsp,%rbp
    1179:	74 0c                	je     1187 <__do_global_dtors_aux+0x27>
    117b:	48 8b 3d 86 2e 00 00 	mov    0x2e86(%rip),%rdi        # 4008 <__dso_handle>
    1182:	e8 e9 fe ff ff       	call   1070 <__cxa_finalize@plt>
    1187:	e8 64 ff ff ff       	call   10f0 <deregister_tm_clones>
    118c:	c6 05 7d 2e 00 00 01 	movb   $0x1,0x2e7d(%rip)        # 4010 <__TMC_END__>
    1193:	5d                   	pop    %rbp
    1194:	c3                   	ret    
    1195:	0f 1f 00             	nopl   (%rax)
    1198:	c3                   	ret    
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <frame_dummy>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	e9 77 ff ff ff       	jmp    1120 <register_tm_clones>

00000000000011a9 <main>:
    11a9:	f3 0f 1e fa          	endbr64 
    11ad:	55                   	push   %rbp
    11ae:	48 89 e5             	mov    %rsp,%rbp
    11b1:	48 83 ec 30          	sub    $0x30,%rsp
    11b5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    11bc:	00 00 
    11be:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11c2:	31 c0                	xor    %eax,%eax
    11c4:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
    11cb:	e9 1a 01 00 00       	jmp    12ea <main+0x141>
    11d0:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    11d4:	48 89 c6             	mov    %rax,%rsi
    11d7:	bf 00 00 00 00       	mov    $0x0,%edi
    11dc:	e8 9f fe ff ff       	call   1080 <clock_gettime@plt>
    11e1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    11e5:	66 0f ef c0          	pxor   %xmm0,%xmm0
    11e9:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    11ee:	66 0f 2f 05 2a 0e 00 	comisd 0xe2a(%rip),%xmm0        # 2020 <_IO_stdin_used+0x20>
    11f5:	00 
    11f6:	76 0f                	jbe    1207 <main+0x5e>
    11f8:	8b 05 16 2e 00 00    	mov    0x2e16(%rip),%eax        # 4014 <quanti>
    11fe:	83 c0 01             	add    $0x1,%eax
    1201:	89 05 0d 2e 00 00    	mov    %eax,0x2e0d(%rip)        # 4014 <quanti>
    1207:	8b 55 dc             	mov    -0x24(%rbp),%edx
    120a:	48 63 c2             	movslq %edx,%rax
    120d:	48 69 c0 1f 85 eb 51 	imul   $0x51eb851f,%rax,%rax
    1214:	48 c1 e8 20          	shr    $0x20,%rax
    1218:	c1 f8 04             	sar    $0x4,%eax
    121b:	89 d1                	mov    %edx,%ecx
    121d:	c1 f9 1f             	sar    $0x1f,%ecx
    1220:	29 c8                	sub    %ecx,%eax
    1222:	6b c8 32             	imul   $0x32,%eax,%ecx
    1225:	89 d0                	mov    %edx,%eax
    1227:	29 c8                	sub    %ecx,%eax
    1229:	85 c0                	test   %eax,%eax
    122b:	75 37                	jne    1264 <main+0xbb>
    122d:	8b 05 e1 2d 00 00    	mov    0x2de1(%rip),%eax        # 4014 <quanti>
    1233:	89 c6                	mov    %eax,%esi
    1235:	48 8d 05 cc 0d 00 00 	lea    0xdcc(%rip),%rax        # 2008 <_IO_stdin_used+0x8>
    123c:	48 89 c7             	mov    %rax,%rdi
    123f:	b8 00 00 00 00       	mov    $0x0,%eax
    1244:	e8 57 fe ff ff       	call   10a0 <printf@plt>
    1249:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    124d:	48 89 c6             	mov    %rax,%rsi
    1250:	48 8d 05 bd 0d 00 00 	lea    0xdbd(%rip),%rax        # 2014 <_IO_stdin_used+0x14>
    1257:	48 89 c7             	mov    %rax,%rdi
    125a:	b8 00 00 00 00       	mov    $0x0,%eax
    125f:	e8 3c fe ff ff       	call   10a0 <printf@plt>
    1264:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1268:	66 0f ef c9          	pxor   %xmm1,%xmm1
    126c:	f2 48 0f 2a c8       	cvtsi2sd %rax,%xmm1
    1271:	f2 0f 10 05 af 0d 00 	movsd  0xdaf(%rip),%xmm0        # 2028 <_IO_stdin_used+0x28>
    1278:	00 
    1279:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    127d:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
    1282:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1286:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    128a:	66 0f ef c0          	pxor   %xmm0,%xmm0
    128e:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    1293:	66 0f 2f 05 95 0d 00 	comisd 0xd95(%rip),%xmm0        # 2030 <_IO_stdin_used+0x30>
    129a:	00 
    129b:	72 2e                	jb     12cb <main+0x122>
    129d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    12a1:	66 0f ef c0          	pxor   %xmm0,%xmm0
    12a5:	f2 48 0f 2a c0       	cvtsi2sd %rax,%xmm0
    12aa:	f2 0f 10 0d 7e 0d 00 	movsd  0xd7e(%rip),%xmm1        # 2030 <_IO_stdin_used+0x30>
    12b1:	00 
    12b2:	f2 0f 5c c1          	subsd  %xmm1,%xmm0
    12b6:	f2 48 0f 2c c0       	cvttsd2si %xmm0,%rax
    12bb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    12bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    12c3:	48 83 c0 01          	add    $0x1,%rax
    12c7:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    12cb:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    12cf:	b9 00 00 00 00       	mov    $0x0,%ecx
    12d4:	48 89 c2             	mov    %rax,%rdx
    12d7:	be 01 00 00 00       	mov    $0x1,%esi
    12dc:	bf 00 00 00 00       	mov    $0x0,%edi
    12e1:	e8 ca fd ff ff       	call   10b0 <clock_nanosleep@plt>
    12e6:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)
    12ea:	81 7d dc e7 03 00 00 	cmpl   $0x3e7,-0x24(%rbp)
    12f1:	0f 8e d9 fe ff ff    	jle    11d0 <main+0x27>
    12f7:	b8 00 00 00 00       	mov    $0x0,%eax
    12fc:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1300:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    1307:	00 00 
    1309:	74 05                	je     1310 <main+0x167>
    130b:	e8 80 fd ff ff       	call   1090 <__stack_chk_fail@plt>
    1310:	c9                   	leave  
    1311:	c3                   	ret    

Disassemblamento della sezione .fini:

0000000000001314 <_fini>:
    1314:	f3 0f 1e fa          	endbr64 
    1318:	48 83 ec 08          	sub    $0x8,%rsp
    131c:	48 83 c4 08          	add    $0x8,%rsp
    1320:	c3                   	ret    

Disassemblamento della sezione .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	00 00                	add    %al,(%rax)
    2006:	00 00                	add    %al,(%rax)
    2008:	51                   	push   %rcx
    2009:	75 61                	jne    206c <__GNU_EH_FRAME_HDR+0x34>
    200b:	6e                   	outsb  %ds:(%rsi),(%dx)
    200c:	74 69                	je     2077 <__GNU_EH_FRAME_HDR+0x3f>
    200e:	3a 20                	cmp    (%rax),%ah
    2010:	25 64 0a 00 6e       	and    $0x6e000a64,%eax
    2015:	73 3a                	jae    2051 <__GNU_EH_FRAME_HDR+0x19>
    2017:	20 25 6c 64 0a 00    	and    %ah,0xa646c(%rip)        # a8489 <_end+0xa4471>
    201d:	00 00                	add    %al,(%rax)
    201f:	00 00                	add    %al,(%rax)
    2021:	00 00                	add    %al,(%rax)
    2023:	00 84 d7 97 41 00 00 	add    %al,0x4197(%rdi,%rdx,8)
    202a:	00 00                	add    %al,(%rax)
    202c:	80 84 4e 41 00 00 00 	addb   $0x0,0x41(%rsi,%rcx,2)
    2033:	00 
    2034:	65 cd cd             	gs int $0xcd
    2037:	41                   	rex.B

Disassemblamento della sezione .eh_frame_hdr:

0000000000002038 <__GNU_EH_FRAME_HDR>:
    2038:	01 1b                	add    %ebx,(%rbx)
    203a:	03 3b                	add    (%rbx),%edi
    203c:	34 00                	xor    $0x0,%al
    203e:	00 00                	add    %al,(%rax)
    2040:	05 00 00 00 e8       	add    $0xe8000000,%eax
    2045:	ef                   	out    %eax,(%dx)
    2046:	ff                   	(bad)  
    2047:	ff 68 00             	ljmp   *0x0(%rax)
    204a:	00 00                	add    %al,(%rax)
    204c:	38 f0                	cmp    %dh,%al
    204e:	ff                   	(bad)  
    204f:	ff 90 00 00 00 48    	call   *0x48000000(%rax)
    2055:	f0 ff                	lock (bad) 
    2057:	ff a8 00 00 00 88    	ljmp   *-0x78000000(%rax)
    205d:	f0 ff                	lock (bad) 
    205f:	ff 50 00             	call   *0x0(%rax)
    2062:	00 00                	add    %al,(%rax)
    2064:	71 f1                	jno    2057 <__GNU_EH_FRAME_HDR+0x1f>
    2066:	ff                   	(bad)  
    2067:	ff c0                	inc    %eax
    2069:	00 00                	add    %al,(%rax)
	...

Disassemblamento della sezione .eh_frame:

0000000000002070 <__FRAME_END__-0xa8>:
    2070:	14 00                	adc    $0x0,%al
    2072:	00 00                	add    %al,(%rax)
    2074:	00 00                	add    %al,(%rax)
    2076:	00 00                	add    %al,(%rax)
    2078:	01 7a 52             	add    %edi,0x52(%rdx)
    207b:	00 01                	add    %al,(%rcx)
    207d:	78 10                	js     208f <__GNU_EH_FRAME_HDR+0x57>
    207f:	01 1b                	add    %ebx,(%rbx)
    2081:	0c 07                	or     $0x7,%al
    2083:	08 90 01 00 00 14    	or     %dl,0x14000001(%rax)
    2089:	00 00                	add    %al,(%rax)
    208b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    208e:	00 00                	add    %al,(%rax)
    2090:	30 f0                	xor    %dh,%al
    2092:	ff                   	(bad)  
    2093:	ff 26                	jmp    *(%rsi)
    2095:	00 00                	add    %al,(%rax)
    2097:	00 00                	add    %al,(%rax)
    2099:	44 07                	rex.R (bad) 
    209b:	10 00                	adc    %al,(%rax)
    209d:	00 00                	add    %al,(%rax)
    209f:	00 24 00             	add    %ah,(%rax,%rax,1)
    20a2:	00 00                	add    %al,(%rax)
    20a4:	34 00                	xor    $0x0,%al
    20a6:	00 00                	add    %al,(%rax)
    20a8:	78 ef                	js     2099 <__GNU_EH_FRAME_HDR+0x61>
    20aa:	ff                   	(bad)  
    20ab:	ff 50 00             	call   *0x0(%rax)
    20ae:	00 00                	add    %al,(%rax)
    20b0:	00 0e                	add    %cl,(%rsi)
    20b2:	10 46 0e             	adc    %al,0xe(%rsi)
    20b5:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    20b8:	0b 77 08             	or     0x8(%rdi),%esi
    20bb:	80 00 3f             	addb   $0x3f,(%rax)
    20be:	1a 3a                	sbb    (%rdx),%bh
    20c0:	2a 33                	sub    (%rbx),%dh
    20c2:	24 22                	and    $0x22,%al
    20c4:	00 00                	add    %al,(%rax)
    20c6:	00 00                	add    %al,(%rax)
    20c8:	14 00                	adc    $0x0,%al
    20ca:	00 00                	add    %al,(%rax)
    20cc:	5c                   	pop    %rsp
    20cd:	00 00                	add    %al,(%rax)
    20cf:	00 a0 ef ff ff 10    	add    %ah,0x10ffffef(%rax)
	...
    20dd:	00 00                	add    %al,(%rax)
    20df:	00 14 00             	add    %dl,(%rax,%rax,1)
    20e2:	00 00                	add    %al,(%rax)
    20e4:	74 00                	je     20e6 <__GNU_EH_FRAME_HDR+0xae>
    20e6:	00 00                	add    %al,(%rax)
    20e8:	98                   	cwtl   
    20e9:	ef                   	out    %eax,(%dx)
    20ea:	ff                   	(bad)  
    20eb:	ff 40 00             	incl   0x0(%rax)
	...
    20f6:	00 00                	add    %al,(%rax)
    20f8:	1c 00                	sbb    $0x0,%al
    20fa:	00 00                	add    %al,(%rax)
    20fc:	8c 00                	mov    %es,(%rax)
    20fe:	00 00                	add    %al,(%rax)
    2100:	a9 f0 ff ff 69       	test   $0x69fffff0,%eax
    2105:	01 00                	add    %eax,(%rax)
    2107:	00 00                	add    %al,(%rax)
    2109:	45 0e                	rex.RB (bad) 
    210b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2111:	03 60 01             	add    0x1(%rax),%esp
    2114:	0c 07                	or     $0x7,%al
    2116:	08 00                	or     %al,(%rax)

0000000000002118 <__FRAME_END__>:
    2118:	00 00                	add    %al,(%rax)
	...

Disassemblamento della sezione .init_array:

0000000000003da0 <__frame_dummy_init_array_entry>:
    3da0:	a0                   	.byte 0xa0
    3da1:	11 00                	adc    %eax,(%rax)
    3da3:	00 00                	add    %al,(%rax)
    3da5:	00 00                	add    %al,(%rax)
	...

Disassemblamento della sezione .fini_array:

0000000000003da8 <__do_global_dtors_aux_fini_array_entry>:
    3da8:	60                   	(bad)  
    3da9:	11 00                	adc    %eax,(%rax)
    3dab:	00 00                	add    %al,(%rax)
    3dad:	00 00                	add    %al,(%rax)
	...

Disassemblamento della sezione .dynamic:

0000000000003db0 <_DYNAMIC>:
    3db0:	01 00                	add    %eax,(%rax)
    3db2:	00 00                	add    %al,(%rax)
    3db4:	00 00                	add    %al,(%rax)
    3db6:	00 00                	add    %al,(%rax)
    3db8:	58                   	pop    %rax
    3db9:	00 00                	add    %al,(%rax)
    3dbb:	00 00                	add    %al,(%rax)
    3dbd:	00 00                	add    %al,(%rax)
    3dbf:	00 0c 00             	add    %cl,(%rax,%rax,1)
    3dc2:	00 00                	add    %al,(%rax)
    3dc4:	00 00                	add    %al,(%rax)
    3dc6:	00 00                	add    %al,(%rax)
    3dc8:	00 10                	add    %dl,(%rax)
    3dca:	00 00                	add    %al,(%rax)
    3dcc:	00 00                	add    %al,(%rax)
    3dce:	00 00                	add    %al,(%rax)
    3dd0:	0d 00 00 00 00       	or     $0x0,%eax
    3dd5:	00 00                	add    %al,(%rax)
    3dd7:	00 14 13             	add    %dl,(%rbx,%rdx,1)
    3dda:	00 00                	add    %al,(%rax)
    3ddc:	00 00                	add    %al,(%rax)
    3dde:	00 00                	add    %al,(%rax)
    3de0:	19 00                	sbb    %eax,(%rax)
    3de2:	00 00                	add    %al,(%rax)
    3de4:	00 00                	add    %al,(%rax)
    3de6:	00 00                	add    %al,(%rax)
    3de8:	a0 3d 00 00 00 00 00 	movabs 0x1b0000000000003d,%al
    3def:	00 1b 
    3df1:	00 00                	add    %al,(%rax)
    3df3:	00 00                	add    %al,(%rax)
    3df5:	00 00                	add    %al,(%rax)
    3df7:	00 08                	add    %cl,(%rax)
    3df9:	00 00                	add    %al,(%rax)
    3dfb:	00 00                	add    %al,(%rax)
    3dfd:	00 00                	add    %al,(%rax)
    3dff:	00 1a                	add    %bl,(%rdx)
    3e01:	00 00                	add    %al,(%rax)
    3e03:	00 00                	add    %al,(%rax)
    3e05:	00 00                	add    %al,(%rax)
    3e07:	00 a8 3d 00 00 00    	add    %ch,0x3d(%rax)
    3e0d:	00 00                	add    %al,(%rax)
    3e0f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    3e12:	00 00                	add    %al,(%rax)
    3e14:	00 00                	add    %al,(%rax)
    3e16:	00 00                	add    %al,(%rax)
    3e18:	08 00                	or     %al,(%rax)
    3e1a:	00 00                	add    %al,(%rax)
    3e1c:	00 00                	add    %al,(%rax)
    3e1e:	00 00                	add    %al,(%rax)
    3e20:	f5                   	cmc    
    3e21:	fe                   	(bad)  
    3e22:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e25:	00 00                	add    %al,(%rax)
    3e27:	00 b0 03 00 00 00    	add    %dh,0x3(%rax)
    3e2d:	00 00                	add    %al,(%rax)
    3e2f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e35 <_DYNAMIC+0x85>
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 c8                	add    %cl,%al
    3e39:	04 00                	add    $0x0,%al
    3e3b:	00 00                	add    %al,(%rax)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 06                	add    %al,(%rsi)
    3e41:	00 00                	add    %al,(%rax)
    3e43:	00 00                	add    %al,(%rax)
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 d8                	add    %bl,%al
    3e49:	03 00                	add    (%rax),%eax
    3e4b:	00 00                	add    %al,(%rax)
    3e4d:	00 00                	add    %al,(%rax)
    3e4f:	00 0a                	add    %cl,(%rdx)
    3e51:	00 00                	add    %al,(%rax)
    3e53:	00 00                	add    %al,(%rax)
    3e55:	00 00                	add    %al,(%rax)
    3e57:	00 d3                	add    %dl,%bl
    3e59:	00 00                	add    %al,(%rax)
    3e5b:	00 00                	add    %al,(%rax)
    3e5d:	00 00                	add    %al,(%rax)
    3e5f:	00 0b                	add    %cl,(%rbx)
    3e61:	00 00                	add    %al,(%rax)
    3e63:	00 00                	add    %al,(%rax)
    3e65:	00 00                	add    %al,(%rax)
    3e67:	00 18                	add    %bl,(%rax)
    3e69:	00 00                	add    %al,(%rax)
    3e6b:	00 00                	add    %al,(%rax)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3e75 <_DYNAMIC+0xc5>
	...
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 03                	add    %al,(%rbx)
    3e81:	00 00                	add    %al,(%rax)
    3e83:	00 00                	add    %al,(%rax)
    3e85:	00 00                	add    %al,(%rax)
    3e87:	00 a0 3f 00 00 00    	add    %ah,0x3f(%rax)
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 02                	add    %al,(%rdx)
    3e91:	00 00                	add    %al,(%rax)
    3e93:	00 00                	add    %al,(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 60 00             	add    %ah,0x0(%rax)
    3e9a:	00 00                	add    %al,(%rax)
    3e9c:	00 00                	add    %al,(%rax)
    3e9e:	00 00                	add    %al,(%rax)
    3ea0:	14 00                	adc    $0x0,%al
    3ea2:	00 00                	add    %al,(%rax)
    3ea4:	00 00                	add    %al,(%rax)
    3ea6:	00 00                	add    %al,(%rax)
    3ea8:	07                   	(bad)  
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 17                	add    %dl,(%rdi)
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 c0                	add    %al,%al
    3eb9:	06                   	(bad)  
    3eba:	00 00                	add    %al,(%rax)
    3ebc:	00 00                	add    %al,(%rax)
    3ebe:	00 00                	add    %al,(%rax)
    3ec0:	07                   	(bad)  
	...
    3ec9:	06                   	(bad)  
    3eca:	00 00                	add    %al,(%rax)
    3ecc:	00 00                	add    %al,(%rax)
    3ece:	00 00                	add    %al,(%rax)
    3ed0:	08 00                	or     %al,(%rax)
    3ed2:	00 00                	add    %al,(%rax)
    3ed4:	00 00                	add    %al,(%rax)
    3ed6:	00 00                	add    %al,(%rax)
    3ed8:	c0 00 00             	rolb   $0x0,(%rax)
    3edb:	00 00                	add    %al,(%rax)
    3edd:	00 00                	add    %al,(%rax)
    3edf:	00 09                	add    %cl,(%rcx)
    3ee1:	00 00                	add    %al,(%rax)
    3ee3:	00 00                	add    %al,(%rax)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 18                	add    %bl,(%rax)
    3ee9:	00 00                	add    %al,(%rax)
    3eeb:	00 00                	add    %al,(%rax)
    3eed:	00 00                	add    %al,(%rax)
    3eef:	00 1e                	add    %bl,(%rsi)
    3ef1:	00 00                	add    %al,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 08                	add    %cl,(%rax)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 fb                	add    %bh,%bl
    3f01:	ff                   	(bad)  
    3f02:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f05:	00 00                	add    %al,(%rax)
    3f07:	00 01                	add    %al,(%rcx)
    3f09:	00 00                	add    %al,(%rax)
    3f0b:	08 00                	or     %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 fe                	add    %bh,%dh
    3f11:	ff                   	(bad)  
    3f12:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 b0 05 00 00 00    	add    %dh,0x5(%rax)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 ff                	add    %bh,%bh
    3f21:	ff                   	(bad)  
    3f22:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 01                	add    %al,(%rcx)
    3f29:	00 00                	add    %al,(%rax)
    3f2b:	00 00                	add    %al,(%rax)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 f0                	add    %dh,%al
    3f31:	ff                   	(bad)  
    3f32:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f35:	00 00                	add    %al,(%rax)
    3f37:	00 9c 05 00 00 00 00 	add    %bl,0x0(%rbp,%rax,1)
    3f3e:	00 00                	add    %al,(%rax)
    3f40:	f9                   	stc    
    3f41:	ff                   	(bad)  
    3f42:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 03                	add    %al,(%rbx)
	...

Disassemblamento della sezione .got:

0000000000003fa0 <_GLOBAL_OFFSET_TABLE_>:
    3fa0:	b0 3d                	mov    $0x3d,%al
	...
    3fb6:	00 00                	add    %al,(%rax)
    3fb8:	30 10                	xor    %dl,(%rax)
    3fba:	00 00                	add    %al,(%rax)
    3fbc:	00 00                	add    %al,(%rax)
    3fbe:	00 00                	add    %al,(%rax)
    3fc0:	40 10 00             	rex adc %al,(%rax)
    3fc3:	00 00                	add    %al,(%rax)
    3fc5:	00 00                	add    %al,(%rax)
    3fc7:	00 50 10             	add    %dl,0x10(%rax)
    3fca:	00 00                	add    %al,(%rax)
    3fcc:	00 00                	add    %al,(%rax)
    3fce:	00 00                	add    %al,(%rax)
    3fd0:	60                   	(bad)  
    3fd1:	10 00                	adc    %al,(%rax)
	...

Disassemblamento della sezione .data:

0000000000004000 <__data_start>:
	...

0000000000004008 <__dso_handle>:
    4008:	08 40 00             	or     %al,0x0(%rax)
    400b:	00 00                	add    %al,(%rax)
    400d:	00 00                	add    %al,(%rax)
	...

Disassemblamento della sezione .bss:

0000000000004010 <completed.0>:
    4010:	00 00                	add    %al,(%rax)
	...

0000000000004014 <quanti>:
    4014:	00 00                	add    %al,(%rax)
	...

Disassemblamento della sezione .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 55 62             	sub    %dl,0x62(%rbp)
   8:	75 6e                	jne    78 <__abi_tag-0x314>
   a:	74 75                	je     81 <__abi_tag-0x30b>
   c:	20 31                	and    %dh,(%rcx)
   e:	31 2e                	xor    %ebp,(%rsi)
  10:	34 2e                	xor    $0x2e,%al
  12:	30 2d 31 75 62 75    	xor    %ch,0x75627531(%rip)        # 75627549 <_end+0x75623531>
  18:	6e                   	outsb  %ds:(%rsi),(%dx)
  19:	74 75                	je     90 <__abi_tag-0x2fc>
  1b:	31 7e 32             	xor    %edi,0x32(%rsi)
  1e:	32 2e                	xor    (%rsi),%ch
  20:	30 34 29             	xor    %dh,(%rcx,%rbp,1)
  23:	20 31                	and    %dh,(%rcx)
  25:	31 2e                	xor    %ebp,(%rsi)
  27:	34 2e                	xor    $0x2e,%al
  29:	30 00                	xor    %al,(%rax)
